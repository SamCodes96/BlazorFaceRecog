@using BlazorFaceRecog.Client.Components.FaceCard
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json.Serialization
@using System.Text.Json

@inject ISnackbar Snackbar
@inject HttpClient Http

<MudDialog ContentStyle="align-content: center; max-height:600px; overflow-y:auto; min-width:300px; min-height:216px;">
    <DialogContent>
        <FaceCardGrid @ref=_cardGrid />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick=AddCard
                   StartIcon=@Icons.Material.Filled.Add
                   Variant=Variant.Filled
                   Color=MudBlazor.Color.Primary>Add Face</MudButton>
        <MudSpacer />
        <MudButton OnClick=Cancel>Cancel</MudButton>
        <MudButton OnClick=@(async () => await Submit()) Color=Color.Primary>Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    public static string Title = "Train faces";

    [CascadingParameter]
    private MudDialogInstance _mudDialog { get; set; } = new();

    private FaceCardGrid _cardGrid = new();

    private async Task Submit()
    {
        var valid = await _cardGrid.ValidateCards();
        if (!valid)
            return;

        if (!_cardGrid.HasChanges())
        {
            Snackbar.Add("No changes to save.", MudBlazor.Severity.Warning);
            return;
        }

        var faceModels = _cardGrid.GetModels().ToArray();

        var response = await Http.PostAsJsonAsync("TrainFaces", faceModels);

        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add("Faces updated.", MudBlazor.Severity.Success);

            _mudDialog.Close();
        }
        else
        {
            Snackbar.Add("Failed to update. Please try again.", MudBlazor.Severity.Error);
        }
    }

    private void Cancel() => _mudDialog.Cancel();

    private void AddCard() => _cardGrid.AddNew();
}