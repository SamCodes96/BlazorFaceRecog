@using BlazorFaceRecog.Client.Components.FaceCard
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json.Serialization
@using System.Text.Json

@inject ISnackbar Snackbar
@inject HttpClient Http

<MudDialog ContentStyle="align-content: center; max-height:600px; overflow-y:auto; min-width:300px; min-height:216px;">
    <DialogContent>
        <FaceCardGrid @ref=_cardGrid />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick=AddCard
                   StartIcon=@Icons.Material.Filled.Add
                   Variant=Variant.Filled
                   Color=MudBlazor.Color.Primary>Add Face</MudButton>
        <MudSpacer />
        <MudButton OnClick=Cancel>Cancel</MudButton>
        <MudButton OnClick=SubmitAsync
                   Color=Color.Primary>Save</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    public const string Title = "Train faces";

    [CascadingParameter]
    public IMudDialogInstance MudDialog { get; set; } = default!;

    private FaceCardGrid _cardGrid = default!;

    private async Task SubmitAsync()
    {
        if (!await _cardGrid.ValidateCardsAsync())
            return;

        if (!_cardGrid.HasChanges())
        {
            Snackbar.Clear();
            Snackbar.Add("No changes to save.", MudBlazor.Severity.Warning);
            return;
        }

        var faceModels = _cardGrid.GetTrainModels().ToArray();

        var response = await Http.PostAsJsonAsync("Faces/Train", faceModels);
        if (!response.IsSuccessStatusCode)
        {
            Snackbar.Clear();
            Snackbar.Add("Failed to update. Please try again.", MudBlazor.Severity.Error);
            return;
        }

        Snackbar.Clear();
        Snackbar.Add("Faces updated.", MudBlazor.Severity.Success);

        MudDialog.Close();
    }

    private void Cancel() => MudDialog.Cancel();

    private void AddCard() => _cardGrid.AddNew();
}