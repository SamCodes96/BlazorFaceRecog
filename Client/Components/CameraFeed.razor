@using System.Text.RegularExpressions
@using System.Drawing

@inject IJSRuntime JsRuntime

<div style="position: relative; width: 100%; margin-top: 20px">
    <video id="videoFeed" style="width: 100%; height: 100%"></video>
    <canvas id="currentFrame" style="width:100%; height: 100%; position: absolute; left: 0; display:none;"></canvas>
    <canvas id="faceHighlight" style="width: 100%; height: 100%; position: absolute; left: 0; z-index: 1"></canvas>
</div>

@code {
    private record class JSImage(string DataUrl);

    protected override async Task OnInitializedAsync()
    {
        await JsRuntime.InvokeVoidAsync("startVideo", "videoFeed");
    }

    public async Task<byte[]> ProcessFrame()
    {
        var imageString = await JsRuntime.InvokeAsync<JSImage>("getFrame", "videoFeed", "currentFrame");

        return GetBytesFromDataUrl(imageString.DataUrl);
    }

    public async Task DrawOnFrame(Rectangle face)
    {
        await JsRuntime.InvokeVoidAsync("drawOnFrame", "faceHighlight", face.X, face.Y, face.Width, face.Height);
    }

    public async Task ClearFaceHighlight()
    {
        await JsRuntime.InvokeVoidAsync("clearFrame", "faceHighlight");
    }

    private static byte[] GetBytesFromDataUrl(string dataUrl)
    {
        var base64Data = Regex.Match(dataUrl, "data:image/(?<type>.+?),(?<data>.+)").Groups["data"].Value;
        return Convert.FromBase64String(base64Data);
    }

}
